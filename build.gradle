/*
 * Copyright (c) 2019 Unic AG
 */

plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'groovy'
    id 'net.researchgate.release' version '2.6.0'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.guava:guava:27.0.1-jre'
    testImplementation gradleTestKit()
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.spockframework:spock-core:1.2-groovy-2.5'
}

gradlePlugin {
    plugins {
        installmysqldriver {
            id = 'com.unic.hybristoolkit.build.plugin.installmysqldriver'
            implementationClass = 'com.unic.hybristoolkit.build.plugin.installmysqldriver.InstallMysqlDriverPlugin'
        }
        hybrisantwrapper {
            id = 'com.unic.hybristoolkit.build.plugin.hybrisantwrapper'
            implementationClass = 'com.unic.hybristoolkit.build.plugin.hybrisantwrapper.HybrisAntWrapperPlugin'
        }
        codequality {
            id = 'com.unic.hybristoolkit.build.plugin.codequality'
            implementationClass = 'com.unic.hybristoolkit.build.plugin.codequality.CodeQualityPlugin'
        }
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username project.hasProperty('unicNexusUser') ? unicNexusUser : System.getenv('NEXUS_USER')
                password project.hasProperty('unicNexusPassword') ? unicNexusPassword : System.getenv('NEXUS_PASSWORD')
            }
            url version.endsWith('-SNAPSHOT') ? snapshotArtifactRepository : releaseArtifactRepository
        }
    }
}

/**
 * RELEASE Configuration
 *
 * Documentation: https://github.com/researchgate/gradle-release
 */

import java.util.regex.Matcher

release {
    // defult versioning is for PATCH version, use -PreleaseMode=MAJOR or -PreleaseMode=MINOR to select different versioning
    // When executed with -Prelease.useAutomaticVersion=true versions are updated automaticly
    versionPatterns = [
            // Example: 2.0.3-SNAPSHOT > 2.0.3 > 3.0.0-SNAPSHOT
            /(\d+)\.(\d+\.\d+(-.*)?)$/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}.0.0${m[0][3] != null ? m[0][3] : ''}") }
    ]
    tagTemplate = 'v${version}'
    scmAdapters = [
            net.researchgate.release.GitAdapter
    ]
    buildTasks = ['publish']
    git {
        // requireBranch = /(release|hotfix)(\/.+)?/
    }
}